@inject Toolbelt.Blazor.I18nText.I18nText I18nText
@if (Education != null)
{
    <div class="row">
        <i class="@IconColorClassCss">school</i>
        <div class="max">
            <h5>(@DateString) @Education.School</h5>
            <h6>@Education.Degree</h6>
            @if (Education.Description != null)
            {
                <p>
                    @((MarkupString)Education.Description)
                </p>
            }
        </div>

    </div>
}
else
{
    <!-- Education is not available -->
}
@code {
    I18nText.Website _website = new();
    
    public string IconColorClassCss = "orange-text";
    public string? DateString;
    
    [Parameter]
    public ResumeEducationModel? Education { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        _website = await I18nText.GetTextTableAsync<I18nText.Website>(this);
    }
    
    protected override void OnParametersSet()
    {
        if (Education == null) return;
        IconColorClassCss = Education.Graduated ? "light-green-text" : "orange-text";
        DateString = Education.EndDate == null
            ? $"{Education.StartDate.Year} - {_website.resumeEducation_present}"
            : $"{Education.StartDate.Year} - {Education.EndDate?.Year}";
    }
}
